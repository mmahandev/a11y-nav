{"version":3,"file":"a11y-nav.umd.js","sources":["../src/a11y-nav.ts"],"sourcesContent":["import \"./a11y-nav.css\";\r\n\r\ninterface A11YNavOptions {\r\n  animate?: boolean;\r\n  duration?: number;\r\n  useArrowKeys?: boolean;\r\n  closeOnBlur?: boolean;\r\n  bodyClass?: string | boolean;\r\n  focusOnOpen?: boolean;\r\n}\r\n\r\ninterface Control {\r\n  el: HTMLButtonElement;\r\n  menu: Menu;\r\n}\r\n\r\ninterface Menu {\r\n  el: HTMLElement;\r\n  id: string;\r\n  control: Control;\r\n  hadTabIndex: boolean;\r\n}\r\n\r\nexport default class A11YNav {\r\n  nav: HTMLElement;\r\n  options: Required<A11YNavOptions>;\r\n  controls: Control[];\r\n  menus: Menu[];\r\n  focusables: HTMLElement[];\r\n\r\n  constructor(element: HTMLElement, options?: A11YNavOptions) {\r\n    this.nav = element;\r\n    this.options = {\r\n      // adds delay for toggling menu open/close animation classes\r\n      animate: true,\r\n      // amount of time in ms for menu open/close animation\r\n      duration: 300,\r\n      // Enables use of arrow keys to navigate menus\r\n      useArrowKeys: true,\r\n      // Enables closing of menus when focus leaves the nav\r\n      closeOnBlur: true,\r\n      // Class to add to body when a menu is open. If false, no class is added.\r\n      bodyClass: \"a11y-nav-menu-open\",\r\n      // Focus menu that just opened\r\n      focusOnOpen: true,\r\n    };\r\n    this.controls = this.getControls();\r\n    this.menus = this.controls.map((control) => control.menu);\r\n    this.focusables = this.getFocusables();\r\n\r\n    // Set user-inputted options if available\r\n    this.options = { ...this.options, ...options };\r\n\r\n    // Bind event handlers\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onButtonKeyDown = this.onButtonKeyDown.bind(this);\r\n    this.onFocusableKeyDown = this.onFocusableKeyDown.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controls.forEach((control) => {\r\n      // set initial properties\r\n      control.menu.el.classList.add(\"a11y-nav-menu\");\r\n      control.menu.el.setAttribute(\"tabindex\", \"-1\");\r\n\r\n      // Attach event listeners\r\n      control.el.addEventListener(\"click\", this.onButtonClick);\r\n      control.el.addEventListener(\"keydown\", this.onButtonKeyDown);\r\n\r\n      // Open menu if aria-expanded is true on page load\r\n      if (control.el.getAttribute(\"aria-expanded\") === \"true\") {\r\n        this.openMenu(control.menu, true);\r\n      }\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.addEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    if (this.options.closeOnBlur) {\r\n      this.nav.addEventListener(\"focusout\", this.onBlur);\r\n    }\r\n  }\r\n\r\n  private onButtonClick(event: MouseEvent): void {\r\n    const button = event.currentTarget as HTMLButtonElement;\r\n    const control = this.controls.find((control) => control.el === button);\r\n    const isOpen = control?.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (control?.menu) {\r\n      this.toggleMenu(control.menu, !isOpen);\r\n    }\r\n  }\r\n\r\n  private onButtonKeyDown(event: KeyboardEvent): void {\r\n    const control = this.getControlFromEl(event.target as HTMLButtonElement);\r\n\r\n    if (!control) return;\r\n\r\n    const hasMenuOpen = control.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (event.key === \"Escape\") {\r\n      if (hasMenuOpen) {\r\n        this.closeMenu(control.menu);\r\n      } else {\r\n        const closestMenuEl =\r\n          control.el.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n        if (closestMenuEl) {\r\n          const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n          if (menu) {\r\n            menu.control.el.focus();\r\n            this.closeMenu(menu);\r\n          } else {\r\n            this.focusables[0].focus();\r\n            this.closeAllMenus();\r\n          }\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      }\r\n    } else if (event.key === \"ArrowDown\" && hasMenuOpen) {\r\n      event.preventDefault();\r\n      control.menu.el.querySelector<HTMLElement>(\"a, button\")?.focus();\r\n    } else {\r\n      const sameLevelFocusables = this.focusables.filter(\r\n        (focusable) =>\r\n          this.getMenuDepthFromEl(focusable) ===\r\n          this.getMenuDepthFromEl(control.el)\r\n      );\r\n      const currentIndex = sameLevelFocusables.findIndex(\r\n        (focusable) => focusable === control.el\r\n      );\r\n\r\n      if (this.options.useArrowKeys) {\r\n        this.controlFocusByKey(\r\n          event,\r\n          sameLevelFocusables.map((focusable) => focusable),\r\n          currentIndex\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFocusableKeyDown(event: KeyboardEvent): void {\r\n    const el = event.target as HTMLButtonElement;\r\n    const focusable = this.getFocusableFromEl(el);\r\n\r\n    if (!focusable) {\r\n      return;\r\n    }\r\n    // Let onButtonKeyDown handle the rest\r\n    else if (this.controls.find((control) => control.el === focusable)) {\r\n      return;\r\n    } else if (event.key === \"Escape\") {\r\n      const closestMenuEl = focusable.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n      if (closestMenuEl) {\r\n        const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n        if (menu) {\r\n          menu.control.el.focus();\r\n          this.closeMenu(menu);\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      } else {\r\n        this.focusables[0].focus();\r\n        this.closeAllMenus();\r\n      }\r\n    }\r\n\r\n    const sameLevelFocusables = this.focusables.filter(\r\n      (f) => this.getMenuDepthFromEl(f) === this.getMenuDepthFromEl(focusable)\r\n    );\r\n    const currentIndex = sameLevelFocusables.findIndex((f) => f === focusable);\r\n\r\n    if (this.options.useArrowKeys) {\r\n      this.controlFocusByKey(\r\n        event,\r\n        sameLevelFocusables.map((f) => f),\r\n        currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private onBlur(event: FocusEvent): void {\r\n    const menuContainsFocus = this.nav.contains(\r\n      event.relatedTarget as HTMLElement\r\n    );\r\n\r\n    if (\r\n      !menuContainsFocus &&\r\n      !!this.nav.querySelector<HTMLElement>(\".a11y-nav-active\")\r\n    ) {\r\n      this.closeAllMenus();\r\n    }\r\n  }\r\n\r\n  private controlFocusByKey(\r\n    event: KeyboardEvent,\r\n    els: HTMLElement[],\r\n    currentIndex: number\r\n  ): void {\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const prevIndex = Math.max(0, currentIndex - 1);\r\n          els[prevIndex].focus();\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const nextIndex = Math.min(els.length - 1, currentIndex + 1);\r\n          els[nextIndex].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private toggleMenu(menu: Menu, show: boolean): void {\r\n    if (show) {\r\n      this.openMenu(menu);\r\n    } else {\r\n      this.closeMenu(menu);\r\n    }\r\n  }\r\n\r\n  private openMenu(menu: Menu, forceNoFocus = false): void {\r\n    // Close all other menus on the same level\r\n    this.menus.forEach((otherMenu) => {\r\n      if (\r\n        otherMenu.el !== menu.el &&\r\n        otherMenu.el.classList.contains(\"a11y-nav-active\") &&\r\n        this.getMenuDepthFromEl(otherMenu.el) ===\r\n          this.getMenuDepthFromEl(menu.el)\r\n      ) {\r\n        this.closeMenu(otherMenu);\r\n      }\r\n    });\r\n\r\n    // Assign classes/properties\r\n    menu.el.classList.add(\"a11y-nav-active\");\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"true\");\r\n    menu.el.parentElement?.classList.add(\"a11y-nav-child-open\");\r\n    if (\r\n      typeof this.options.bodyClass === \"string\" &&\r\n      this.options.bodyClass.length > 0\r\n    ) {\r\n      document.body.classList.add(this.options.bodyClass);\r\n    }\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.add(\"a11y-nav-animate-in\");\r\n\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        setTimeout(() => {\r\n          menu.el.focus();\r\n        }, this.options.duration);\r\n      }\r\n    } else {\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        menu.el.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  private closeMenu(menu: Menu): void {\r\n    // Skip this if it's already closed\r\n    if (!menu.el.classList.contains(\"a11y-nav-active\")) return;\r\n    \r\n    // Close all children menus currently open first\r\n    menu.el\r\n      .querySelectorAll<HTMLElement>(\".a11y-nav-menu\")\r\n      .forEach((childMenuEl) => {\r\n        const childMenu = this.getMenuFromEl(childMenuEl);\r\n\r\n        if (childMenu) this.closeMenu(childMenu);\r\n      });\r\n\r\n    // Checks if any other menus are open on other levels\r\n    const hasOtherOpenMenus = this.menus.some(\r\n      (m) => m.el.classList.contains(\"a11y-nav-active\") && m.el !== menu.el\r\n    );\r\n\r\n    // Set classes/properties\r\n    if (typeof this.options.bodyClass === \"string\" && !hasOtherOpenMenus) {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.remove(\"a11y-nav-animate-in\");\r\n      menu.el.classList.add(\"a11y-nav-animate-out\");\r\n\r\n      setTimeout(() => {\r\n        menu.el.classList.remove(\"a11y-nav-active\");\r\n        menu.el.classList.remove(\"a11y-nav-animate-out\");\r\n        menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n      }, this.options.duration);\r\n    } else {\r\n      menu.el.classList.remove(\"a11y-nav-active\");\r\n      menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n    }\r\n  }\r\n\r\n  public closeAllMenus(): void {\r\n    this.menus.forEach((menu) => {\r\n      this.closeMenu(menu);\r\n    });\r\n    \r\n    if (typeof this.options.bodyClass === \"string\") {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n  }\r\n\r\n  /** Get the menu depth of an element */\r\n  private getMenuDepthFromEl(element: HTMLElement): number {\r\n    let level = 0;\r\n    let parent = element.parentElement;\r\n\r\n    while (parent && parent !== this.nav) {\r\n      if (parent.classList.contains(\"a11y-nav-menu\") || parent === this.nav) {\r\n        level++;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private getMenuFromEl(element: HTMLElement): Menu | null {\r\n    return this.menus.find((menu) => menu.el === element) ?? null;\r\n  }\r\n\r\n  private getControlFromEl(element: HTMLElement): Control | null {\r\n    return this.controls.find((control) => control.el === element) ?? null;\r\n  }\r\n\r\n  private getFocusableFromEl(element: HTMLElement): HTMLElement | null {\r\n    return this.focusables.find((focusable) => focusable === element) ?? null;\r\n  }\r\n\r\n  private getControls(): Control[] {\r\n    return Array.from(\r\n      this.nav.querySelectorAll<HTMLButtonElement>(\r\n        \"button[aria-expanded][aria-controls]\"\r\n      )\r\n    )\r\n      .map((element) => {\r\n        const id = element.getAttribute(\"aria-controls\");\r\n        const menu = document.getElementById(id ?? \"\");\r\n\r\n        if (menu) {\r\n          const control: Control = {\r\n            el: element,\r\n            menu: {\r\n              el: menu,\r\n              id: menu.id,\r\n              hadTabIndex: menu.hasAttribute(\"tabindex\"),\r\n            },\r\n          } as Control;\r\n\r\n          control.menu.control = control;\r\n\r\n          return control;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .flatMap((control) => (control ? [control] : []));\r\n  }\r\n\r\n  private getFocusables(): HTMLElement[] {\r\n    return Array.from(this.nav.querySelectorAll<HTMLElement>(\"a, button\"));\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.closeAllMenus();\r\n\r\n    this.controls.forEach((control) => {\r\n      control.menu.el.classList.remove(\"a11y-nav-menu\");\r\n      if (!control.menu.hadTabIndex) {\r\n        control.menu.el.removeAttribute(\"tabindex\");\r\n      }\r\n\r\n      control.el.removeEventListener(\"click\", this.onButtonClick);\r\n      control.el.removeEventListener(\"keydown\", this.onButtonKeyDown);\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.removeEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    this.nav.removeEventListener(\"focusout\", this.onBlur);\r\n  }\r\n}\r\n"],"names":["element","options","nav","this","controls","menus","focusables","animate","duration","useArrowKeys","closeOnBlur","bodyClass","focusOnOpen","getControls","map","control","menu","getFocusables","_extends","onButtonClick","bind","onButtonKeyDown","onFocusableKeyDown","onBlur","init","_this","forEach","el","classList","add","setAttribute","addEventListener","getAttribute","openMenu","focusable","event","button","currentTarget","find","isOpen","toggleMenu","_this2","getControlFromEl","target","hasMenuOpen","key","closeMenu","closestMenuEl","closest","getMenuFromEl","focus","closeAllMenus","_control$menu$el$quer","preventDefault","querySelector","sameLevelFocusables","filter","getMenuDepthFromEl","currentIndex","findIndex","controlFocusByKey","getFocusableFromEl","f","_this3","contains","relatedTarget","els","Math","max","min","length","show","forceNoFocus","_menu$el$parentElemen","_this4","otherMenu","parentElement","document","body","setTimeout","_this5","querySelectorAll","childMenuEl","childMenu","hasOtherOpenMenus","some","m","remove","_menu$el$parentElemen2","_menu$el$parentElemen3","_this6","level","parent","_this$menus$find","_this$controls$find","_this$focusables$find","from","id","getElementById","hadTabIndex","hasAttribute","flatMap","Array","destroy","removeAttribute","removeEventListener","_this7"],"mappings":"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"}