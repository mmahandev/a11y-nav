{"version":3,"file":"a11y-nav.cjs","sources":["../src/a11y-nav.ts"],"sourcesContent":["import \"./a11y-nav.css\";\r\n\r\ninterface A11YNavOptions {\r\n  animate?: boolean;\r\n  duration?: number;\r\n  useArrowKeys?: boolean;\r\n  closeOnBlur?: boolean;\r\n  bodyClass?: string | boolean;\r\n  focusOnOpen?: boolean;\r\n}\r\n\r\ninterface Control {\r\n  el: HTMLButtonElement;\r\n  menu: Menu;\r\n}\r\n\r\ninterface Menu {\r\n  el: HTMLElement;\r\n  id: string;\r\n  control: Control;\r\n  hadTabIndex: boolean;\r\n}\r\n\r\nexport default class A11YNav {\r\n  nav: HTMLElement;\r\n  options: Required<A11YNavOptions>;\r\n  controls: Control[];\r\n  menus: Menu[];\r\n  focusables: HTMLElement[];\r\n\r\n  constructor(element: HTMLElement, options?: A11YNavOptions) {\r\n    this.nav = element;\r\n    this.options = {\r\n      // adds delay for toggling menu open/close animation classes\r\n      animate: true,\r\n      // amount of time in ms for menu open/close animation\r\n      duration: 300,\r\n      // Enables use of arrow keys to navigate menus\r\n      useArrowKeys: true,\r\n      // Enables closing of menus when focus leaves the nav\r\n      closeOnBlur: true,\r\n      // Class to add to body when a menu is open. If false, no class is added.\r\n      bodyClass: \"a11y-nav-menu-open\",\r\n      // Focus menu that just opened\r\n      focusOnOpen: true,\r\n    };\r\n    this.controls = this.getControls();\r\n    this.menus = this.controls.map((control) => control.menu);\r\n    this.focusables = this.getFocusables();\r\n\r\n    // Set user-inputted options if available\r\n    this.options = { ...this.options, ...options };\r\n\r\n    // Bind event handlers\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onButtonKeyDown = this.onButtonKeyDown.bind(this);\r\n    this.onFocusableKeyDown = this.onFocusableKeyDown.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controls.forEach((control) => {\r\n      // set initial properties\r\n      control.menu.el.classList.add(\"a11y-nav-menu\");\r\n      control.menu.el.setAttribute(\"tabindex\", \"-1\");\r\n\r\n      // Attach event listeners\r\n      control.el.addEventListener(\"click\", this.onButtonClick);\r\n      control.el.addEventListener(\"keydown\", this.onButtonKeyDown);\r\n\r\n      // Open menu if aria-expanded is true on page load\r\n      if (control.el.getAttribute(\"aria-expanded\") === \"true\") {\r\n        this.openMenu(control.menu, true);\r\n      }\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.addEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    if (this.options.closeOnBlur) {\r\n      this.nav.addEventListener(\"focusout\", this.onBlur);\r\n    }\r\n\r\n    this.nav.dispatchEvent(new CustomEvent(\"init\", { detail: this }));\r\n  }\r\n\r\n  private onButtonClick(event: MouseEvent): void {\r\n    const button = event.currentTarget as HTMLButtonElement;\r\n    const control = this.controls.find((control) => control.el === button);\r\n    const isOpen = control?.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (control?.menu) {\r\n      this.toggleMenu(control.menu, !isOpen);\r\n    }\r\n  }\r\n\r\n  private onButtonKeyDown(event: KeyboardEvent): void {\r\n    const control = this.getControlFromEl(event.target as HTMLButtonElement);\r\n\r\n    if (!control) return;\r\n\r\n    const hasMenuOpen = control.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (event.key === \"Escape\") {\r\n      if (hasMenuOpen) {\r\n        this.closeMenu(control.menu);\r\n      } else {\r\n        const closestMenuEl =\r\n          control.el.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n        if (closestMenuEl) {\r\n          const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n          if (menu) {\r\n            menu.control.el.focus();\r\n            this.closeMenu(menu);\r\n          } else {\r\n            this.focusables[0].focus();\r\n            this.closeAllMenus();\r\n          }\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      }\r\n    } else if (event.key === \"ArrowDown\" && hasMenuOpen) {\r\n      event.preventDefault();\r\n      control.menu.el.querySelector<HTMLElement>(\"a, button\")?.focus();\r\n    } else {\r\n      const sameLevelFocusables = this.focusables.filter(\r\n        (focusable) =>\r\n          this.getMenuDepthFromEl(focusable) ===\r\n          this.getMenuDepthFromEl(control.el)\r\n      );\r\n      const currentIndex = sameLevelFocusables.findIndex(\r\n        (focusable) => focusable === control.el\r\n      );\r\n\r\n      if (this.options.useArrowKeys) {\r\n        this.controlFocusByKey(\r\n          event,\r\n          sameLevelFocusables.map((focusable) => focusable),\r\n          currentIndex\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFocusableKeyDown(event: KeyboardEvent): void {\r\n    const el = event.target as HTMLButtonElement;\r\n    const focusable = this.getFocusableFromEl(el);\r\n\r\n    if (!focusable) {\r\n      return;\r\n    }\r\n    // Let onButtonKeyDown handle the rest\r\n    else if (this.controls.find((control) => control.el === focusable)) {\r\n      return;\r\n    } else if (event.key === \"Escape\") {\r\n      const closestMenuEl = focusable.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n      if (closestMenuEl) {\r\n        const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n        if (menu) {\r\n          menu.control.el.focus();\r\n          this.closeMenu(menu);\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      } else {\r\n        this.focusables[0].focus();\r\n        this.closeAllMenus();\r\n      }\r\n    }\r\n\r\n    const sameLevelFocusables = this.focusables.filter(\r\n      (f) => this.getMenuDepthFromEl(f) === this.getMenuDepthFromEl(focusable)\r\n    );\r\n    const currentIndex = sameLevelFocusables.findIndex((f) => f === focusable);\r\n\r\n    if (this.options.useArrowKeys) {\r\n      this.controlFocusByKey(\r\n        event,\r\n        sameLevelFocusables.map((f) => f),\r\n        currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private onBlur(event: FocusEvent): void {\r\n    const menuContainsFocus = this.nav.contains(\r\n      event.relatedTarget as HTMLElement\r\n    );\r\n\r\n    if (\r\n      !menuContainsFocus &&\r\n      !!this.nav.querySelector<HTMLElement>(\".a11y-nav-active\")\r\n    ) {\r\n      this.closeAllMenus();\r\n    }\r\n  }\r\n\r\n  private controlFocusByKey(\r\n    event: KeyboardEvent,\r\n    els: HTMLElement[],\r\n    currentIndex: number\r\n  ): void {\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const prevIndex = Math.max(0, currentIndex - 1);\r\n          els[prevIndex].focus();\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const nextIndex = Math.min(els.length - 1, currentIndex + 1);\r\n          els[nextIndex].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private toggleMenu(menu: Menu, show: boolean): void {\r\n    if (show) {\r\n      this.openMenu(menu);\r\n    } else {\r\n      this.closeMenu(menu);\r\n    }\r\n  }\r\n\r\n  private openMenu(menu: Menu, forceNoFocus = false): void {\r\n    this.nav.dispatchEvent(\r\n      new CustomEvent(\"beforeOpen\", {\r\n        detail: {\r\n          a11yNav: this,\r\n          menu,\r\n        },\r\n      })\r\n    );\r\n\r\n    // Close all other menus on the same level\r\n    this.menus.forEach((otherMenu) => {\r\n      if (\r\n        otherMenu.el !== menu.el &&\r\n        otherMenu.el.classList.contains(\"a11y-nav-active\") &&\r\n        this.getMenuDepthFromEl(otherMenu.el) ===\r\n          this.getMenuDepthFromEl(menu.el)\r\n      ) {\r\n        this.closeMenu(otherMenu);\r\n      }\r\n    });\r\n\r\n    // Assign classes/properties\r\n    menu.el.classList.add(\"a11y-nav-active\");\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"true\");\r\n    menu.el.parentElement?.classList.add(\"a11y-nav-child-open\");\r\n    if (\r\n      typeof this.options.bodyClass === \"string\" &&\r\n      this.options.bodyClass.length > 0\r\n    ) {\r\n      document.body.classList.add(this.options.bodyClass);\r\n    }\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.add(\"a11y-nav-animate-in\");\r\n\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        setTimeout(() => {\r\n          menu.el.focus({\r\n            preventScroll: true,\r\n          });\r\n\r\n          this.nav.dispatchEvent(\r\n            new CustomEvent(\"afterOpen\", {\r\n              detail: {\r\n                a11yNav: this,\r\n                menu,\r\n              },\r\n            })\r\n          );\r\n        }, this.options.duration);\r\n      }\r\n    } else {\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        menu.el.focus({\r\n          preventScroll: true,\r\n        });\r\n\r\n        this.nav.dispatchEvent(\r\n          new CustomEvent(\"afterOpen\", {\r\n            detail: {\r\n              a11yNav: this,\r\n              menu,\r\n            },\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private closeMenu(menu: Menu): void {\r\n    // Skip this if it's already closed\r\n    if (!menu.el.classList.contains(\"a11y-nav-active\")) return;\r\n\r\n    this.nav.dispatchEvent(\r\n      new CustomEvent(\"beforeClose\", {\r\n        detail: {\r\n          a11yNav: this,\r\n          menu,\r\n        },\r\n      })\r\n    );\r\n    \r\n    // Close all children menus currently open first\r\n    menu.el\r\n      .querySelectorAll<HTMLElement>(\".a11y-nav-menu\")\r\n      .forEach((childMenuEl) => {\r\n        const childMenu = this.getMenuFromEl(childMenuEl);\r\n\r\n        if (childMenu) this.closeMenu(childMenu);\r\n      });\r\n\r\n    const close = () => {\r\n      // Checks if any other menus are open on other levels\r\n      const hasOtherOpenMenus = this.menus.some(\r\n        (m) => m.el.classList.contains(\"a11y-nav-active\") && m.el !== menu.el\r\n      );\r\n\r\n      // Set classes/properties\r\n      if (typeof this.options.bodyClass === \"string\" && !hasOtherOpenMenus) {\r\n        document.body.classList.remove(this.options.bodyClass);\r\n      }\r\n\r\n      menu.el.classList.remove(\"a11y-nav-active\");\r\n      menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n\r\n      this.nav.dispatchEvent(\r\n        new CustomEvent(\"afterClose\", {\r\n          detail: {\r\n            a11yNav: this,\r\n            menu,\r\n          },\r\n        })\r\n      );\r\n    }\r\n\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.remove(\"a11y-nav-animate-in\");\r\n      menu.el.classList.add(\"a11y-nav-animate-out\");\r\n\r\n      setTimeout(() => {\r\n        close();\r\n        menu.el.classList.remove(\"a11y-nav-animate-out\");\r\n      }, this.options.duration);\r\n    } else {\r\n      close();\r\n    }\r\n  }\r\n\r\n  public closeAllMenus(): void {\r\n    this.menus.forEach((menu) => {\r\n      this.closeMenu(menu);\r\n    });\r\n\r\n    if (typeof this.options.bodyClass === \"string\") {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n  }\r\n\r\n  /** Get the menu depth of an element */\r\n  private getMenuDepthFromEl(element: HTMLElement): number {\r\n    let level = 0;\r\n    let parent = element.parentElement;\r\n\r\n    while (parent && parent !== this.nav) {\r\n      if (parent.classList.contains(\"a11y-nav-menu\") || parent === this.nav) {\r\n        level++;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private getMenuFromEl(element: HTMLElement): Menu | null {\r\n    return this.menus.find((menu) => menu.el === element) ?? null;\r\n  }\r\n\r\n  private getControlFromEl(element: HTMLElement): Control | null {\r\n    return this.controls.find((control) => control.el === element) ?? null;\r\n  }\r\n\r\n  private getFocusableFromEl(element: HTMLElement): HTMLElement | null {\r\n    return this.focusables.find((focusable) => focusable === element) ?? null;\r\n  }\r\n\r\n  private getControls(): Control[] {\r\n    return Array.from(\r\n      this.nav.querySelectorAll<HTMLButtonElement>(\r\n        \"button[aria-expanded][aria-controls]\"\r\n      )\r\n    )\r\n      .map((element) => {\r\n        const id = element.getAttribute(\"aria-controls\");\r\n        const menu = document.getElementById(id ?? \"\");\r\n\r\n        if (menu) {\r\n          const control: Control = {\r\n            el: element,\r\n            menu: {\r\n              el: menu,\r\n              id: menu.id,\r\n              hadTabIndex: menu.hasAttribute(\"tabindex\"),\r\n            },\r\n          } as Control;\r\n\r\n          control.menu.control = control;\r\n\r\n          return control;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .flatMap((control) => (control ? [control] : []));\r\n  }\r\n\r\n  private getFocusables(): HTMLElement[] {\r\n    return Array.from(this.nav.querySelectorAll<HTMLElement>(\"a, button\"));\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.closeAllMenus();\r\n\r\n    this.controls.forEach((control) => {\r\n      control.menu.el.classList.remove(\"a11y-nav-menu\");\r\n      if (!control.menu.hadTabIndex) {\r\n        control.menu.el.removeAttribute(\"tabindex\");\r\n      }\r\n\r\n      control.el.removeEventListener(\"click\", this.onButtonClick);\r\n      control.el.removeEventListener(\"keydown\", this.onButtonKeyDown);\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.removeEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    this.nav.removeEventListener(\"focusout\", this.onBlur);\r\n\r\n    this.nav.dispatchEvent(\r\n      new CustomEvent(\"destroy\", {\r\n        detail: {\r\n          a11yNav: this,\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"names":["element","options","this","nav","controls","menus","focusables","animate","duration","useArrowKeys","closeOnBlur","bodyClass","focusOnOpen","getControls","map","control","menu","getFocusables","_extends","onButtonClick","bind","onButtonKeyDown","onFocusableKeyDown","onBlur","init","_this","forEach","el","classList","add","setAttribute","addEventListener","getAttribute","openMenu","focusable","dispatchEvent","detail","event","button","currentTarget","find","isOpen","toggleMenu","_this2","getControlFromEl","target","hasMenuOpen","key","closeMenu","closestMenuEl","closest","getMenuFromEl","focus","closeAllMenus","_control$menu$el$quer","preventDefault","querySelector","sameLevelFocusables","filter","getMenuDepthFromEl","currentIndex","findIndex","controlFocusByKey","_this3","getFocusableFromEl","f","contains","relatedTarget","els","Math","max","min","length","show","forceNoFocus","_menu$el$parentElemen","_this4","CustomEvent","a11yNav","otherMenu","parentElement","document","body","setTimeout","preventScroll","_this5","querySelectorAll","childMenuEl","childMenu","close","_menu$el$parentElemen2","hasOtherOpenMenus","some","m","remove","_this6","level","parent","_this$menus$find","_this$controls$find","_this$focusables$find","Array","from","id","getElementById","hadTabIndex","hasAttribute","flatMap","destroy","_this7","removeAttribute","removeEventListener"],"mappings":"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"}