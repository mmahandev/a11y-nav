{"version":3,"file":"a11y-nav.js","sources":["../src/a11y-nav.ts"],"sourcesContent":["import './a11y-nav.css';\r\n\r\ninterface A11YNavOptions {\r\n  animate?: boolean;\r\n  duration?: number;\r\n  useArrowKeys?: boolean;\r\n  closeOnBlur?: boolean;\r\n  bodyClass?: string | boolean;\r\n}\r\n\r\ninterface Control {\r\n  el: HTMLButtonElement;\r\n  menu: Menu;\r\n}\r\n\r\ninterface Menu {\r\n  el: HTMLElement;\r\n  id: string;\r\n  control: Control;\r\n  hadTabIndex: boolean;\r\n}\r\n\r\nexport default class A11YNav {\r\n  nav: HTMLElement;\r\n  options: Required<A11YNavOptions>;\r\n  controls: Control[];\r\n  menus: Menu[];\r\n  focusables: HTMLElement[];\r\n\r\n  constructor(element: HTMLElement, options?: A11YNavOptions) {\r\n    this.nav = element;\r\n    this.options = {\r\n      // adds delay for toggling menu open/close animation classes\r\n      animate: true,\r\n      // amount of time in ms for menu open/close animation\r\n      duration: 300,\r\n      // Enables use of arrow keys to navigate menus\r\n      useArrowKeys: true,\r\n      // Enables closing of menus when focus leaves the nav\r\n      closeOnBlur: true,\r\n      // Class to add to body when a menu is open. If false, no class is added.\r\n      bodyClass: \"a11y-nav-menu-open\",\r\n    };\r\n    this.controls = this.getControls();\r\n    this.menus = this.controls.map((control) => control.menu);\r\n    this.focusables = this.getFocusables();\r\n\r\n    // Set user-inputted options if available\r\n    this.options = { ...this.options, ...options };\r\n\r\n    // Bind event handlers\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onButtonKeyDown = this.onButtonKeyDown.bind(this);\r\n    this.onFocusableKeyDown = this.onFocusableKeyDown.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controls.forEach((control) => {\r\n      // set initial properties\r\n      control.menu.el.classList.add(\"a11y-nav-menu\");\r\n      control.menu.el.setAttribute(\"tabindex\", \"-1\");\r\n\r\n      // Attach event listeners\r\n      control.el.addEventListener(\"click\", this.onButtonClick);\r\n      control.el.addEventListener(\"keydown\", this.onButtonKeyDown);\r\n\r\n      // Open menu if aria-expanded is true on page load\r\n      if (control.el.getAttribute(\"aria-expanded\") === \"true\") {\r\n        this.openMenu(control.menu);\r\n      }\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.addEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    if (this.options.closeOnBlur) {\r\n      this.nav.addEventListener(\"focusout\", this.onBlur);\r\n    }\r\n\r\n  }\r\n\r\n  private onButtonClick(event: MouseEvent): void {\r\n    const button = event.currentTarget as HTMLButtonElement;\r\n    const control = this.controls.find((control) => control.el === button);\r\n    const isOpen = control?.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (control?.menu) {\r\n      this.toggleMenu(control.menu, !isOpen);\r\n    }\r\n  }\r\n\r\n  private onButtonKeyDown(event: KeyboardEvent): void {\r\n    const control = this.getControlFromEl(event.target as HTMLButtonElement);\r\n\r\n    if (!control) return;\r\n\r\n    const hasMenuOpen = control.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (event.key === \"Escape\") {\r\n      if (hasMenuOpen) {\r\n        this.closeMenu(control.menu);\r\n      } else {\r\n        const closestMenuEl =\r\n          control.el.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n        if (closestMenuEl) {\r\n          const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n          if (menu) {\r\n            menu.control.el.focus();\r\n            this.closeMenu(menu);\r\n          } else {\r\n            this.focusables[0].focus();\r\n            this.closeAllMenus();\r\n          }\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      }\r\n    } else if (event.key === \"ArrowDown\" && hasMenuOpen) {\r\n      event.preventDefault();\r\n      control.menu.el.querySelector<HTMLElement>(\"a, button\")?.focus();\r\n    } else {\r\n      const sameLevelFocusables = this.focusables.filter(\r\n        (focusable) =>\r\n          this.getMenuDepthFromEl(focusable) ===\r\n          this.getMenuDepthFromEl(control.el)\r\n      );\r\n      const currentIndex = sameLevelFocusables.findIndex(\r\n        (focusable) => focusable === control.el\r\n      );\r\n\r\n      if (this.options.useArrowKeys) {\r\n        this.controlFocusByKey(\r\n          event,\r\n          sameLevelFocusables.map((focusable) => focusable),\r\n          currentIndex\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFocusableKeyDown(event: KeyboardEvent): void {\r\n    const el = event.target as HTMLButtonElement;\r\n    const focusable = this.getFocusableFromEl(el);\r\n\r\n    if (!focusable) {\r\n      return;\r\n    }\r\n    // Let onButtonKeyDown handle the rest\r\n    else if (this.controls.find((control) => control.el === focusable)) {\r\n      return;\r\n    } else if (event.key === \"Escape\") {\r\n      const closestMenuEl = focusable.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n      if (closestMenuEl) {\r\n        const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n        if (menu) {\r\n          menu.control.el.focus();\r\n          this.closeMenu(menu);\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      } else {\r\n        this.focusables[0].focus();\r\n        this.closeAllMenus();\r\n      }\r\n    }\r\n\r\n    const sameLevelFocusables = this.focusables.filter(\r\n      (f) => this.getMenuDepthFromEl(f) === this.getMenuDepthFromEl(focusable)\r\n    );\r\n    const currentIndex = sameLevelFocusables.findIndex((f) => f === focusable);\r\n\r\n    if (this.options.useArrowKeys) {\r\n      this.controlFocusByKey(\r\n        event,\r\n        sameLevelFocusables.map((f) => f),\r\n        currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private onBlur(event: FocusEvent): void {\r\n    const menuContainsFocus = this.nav.contains(\r\n      event.relatedTarget as HTMLElement\r\n    );\r\n\r\n    if (\r\n      !menuContainsFocus &&\r\n      !!this.nav.querySelector<HTMLElement>(\".a11y-nav-active\")\r\n    ) {\r\n      this.closeAllMenus();\r\n    }\r\n  }\r\n\r\n  private controlFocusByKey(\r\n    event: KeyboardEvent,\r\n    els: HTMLElement[],\r\n    currentIndex: number\r\n  ): void {\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const prevIndex = Math.max(0, currentIndex - 1);\r\n          els[prevIndex].focus();\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const nextIndex = Math.min(els.length - 1, currentIndex + 1);\r\n          els[nextIndex].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private toggleMenu(menu: Menu, show: boolean): void {\r\n    if (show) {\r\n      this.openMenu(menu);\r\n    } else {\r\n      this.closeMenu(menu);\r\n    }\r\n  }\r\n\r\n  private openMenu(menu: Menu): void {\r\n    // Close all other menus on the same level\r\n    this.menus.forEach((otherMenu) => {\r\n      if (\r\n        otherMenu !== menu &&\r\n        this.getMenuDepthFromEl(otherMenu.el) ===\r\n          this.getMenuDepthFromEl(menu.el)\r\n      ) {\r\n        this.closeMenu(otherMenu);\r\n      }\r\n    });\r\n\r\n    // Assign classes/properties\r\n    menu.el.classList.add(\"a11y-nav-active\");\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"true\");\r\n    menu.el.parentElement?.classList.add(\"a11y-nav-child-open\");\r\n    if (typeof this.options.bodyClass === 'string' && this.options.bodyClass.length > 0) {\r\n      document.body.classList.add(this.options.bodyClass);\r\n    }\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.add(\"a11y-nav-animate-in\");\r\n    }\r\n  }\r\n\r\n  private closeMenu(menu: Menu): void {\r\n    // Close all children menus currently open first\r\n    menu.el\r\n      .querySelectorAll<HTMLElement>(\".a11y-nav-menu\")\r\n      .forEach((childMenuEl) => {\r\n        const childMenu = this.getMenuFromEl(childMenuEl);\r\n\r\n        if (childMenu) this.closeMenu(childMenu);\r\n      });\r\n\r\n    // Set classes/properties\r\n    if (typeof this.options.bodyClass === 'string') {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.remove(\"a11y-nav-animate-in\");\r\n      menu.el.classList.add(\"a11y-nav-animate-out\");\r\n\r\n      setTimeout(() => {\r\n        menu.el.classList.remove(\"a11y-nav-active\");\r\n        menu.el.classList.remove(\"a11y-nav-animate-out\");\r\n        menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n      }, this.options.duration);\r\n    } else {\r\n      menu.el.classList.remove(\"a11y-nav-active\");\r\n      menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n    }\r\n  }\r\n\r\n  public closeAllMenus(): void {\r\n    this.menus.forEach((menu) => {\r\n      this.closeMenu(menu);\r\n    });\r\n  }\r\n\r\n  private getMenuDepthFromEl(element: HTMLElement): number {\r\n    let level = 0;\r\n    let parent = element.parentElement;\r\n\r\n    while (parent && parent !== this.nav) {\r\n      if (parent.classList.contains(\"a11y-nav-menu\") || parent === this.nav) {\r\n        level++;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private getMenuFromEl(element: HTMLElement): Menu | null {\r\n    return this.menus.find((menu) => menu.el === element) ?? null;\r\n  }\r\n\r\n  private getControlFromEl(element: HTMLElement): Control | null {\r\n    return this.controls.find((control) => control.el === element) ?? null;\r\n  }\r\n\r\n  private getFocusableFromEl(element: HTMLElement): HTMLElement | null {\r\n    return this.focusables.find((focusable) => focusable === element) ?? null;\r\n  }\r\n\r\n  private getControls(): Control[] {\r\n    return Array.from(\r\n      this.nav.querySelectorAll<HTMLButtonElement>(\r\n        \"button[aria-expanded][aria-controls]\"\r\n      )\r\n    )\r\n      .map((element) => {\r\n        const id = element.getAttribute(\"aria-controls\");\r\n        const menu = document.getElementById(id ?? \"\");\r\n\r\n        if (menu) {\r\n          const control: Control = {\r\n            el: element,\r\n            menu: {\r\n              el: menu,\r\n              id: menu.id,\r\n              hadTabIndex: menu.hasAttribute(\"tabindex\"),\r\n            }\r\n          } as Control;\r\n\r\n          control.menu.control = control;\r\n\r\n          return control;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .flatMap((control) => (control ? [control] : []));\r\n  }\r\n\r\n  private getFocusables(): HTMLElement[] {\r\n    return Array.from(this.nav.querySelectorAll<HTMLElement>(\"a, button\"));\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.closeAllMenus();\r\n\r\n    this.controls.forEach((control) => {\r\n      control.menu.el.classList.remove(\"a11y-nav-menu\");\r\n      if (!control.menu.hadTabIndex) {\r\n        control.menu.el.removeAttribute(\"tabindex\");\r\n      }\r\n\r\n      control.el.removeEventListener(\"click\", this.onButtonClick);\r\n      control.el.removeEventListener(\"keydown\", this.onButtonKeyDown);\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.removeEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    this.nav.removeEventListener(\"focusout\", this.onBlur);\r\n  }\r\n}\r\n"],"names":["element","options","nav","this","controls","menus","focusables","animate","duration","useArrowKeys","closeOnBlur","bodyClass","getControls","map","control","menu","getFocusables","_extends","onButtonClick","bind","onButtonKeyDown","onFocusableKeyDown","onBlur","init","forEach","el","classList","add","setAttribute","addEventListener","_this","getAttribute","openMenu","focusable","event","currentTarget","find","button","toggleMenu","isOpen","_this2","getControlFromEl","target","hasMenuOpen","key","closeMenu","closestMenuEl","closest","getMenuFromEl","focus","closeAllMenus","_control$menu$el$quer","preventDefault","querySelector","sameLevelFocusables","filter","getMenuDepthFromEl","currentIndex","findIndex","controlFocusByKey","_this3","getFocusableFromEl","f","contains","relatedTarget","els","Math","max","min","length","show","_menu$el$parentElemen","_this4","otherMenu","parentElement","document","body","_this5","querySelectorAll","childMenuEl","childMenu","remove","setTimeout","_menu$el$parentElemen2","_this6","parent","level","_this$menus$find","_this$controls$find","_this$focusables$find","from","id","getElementById","hadTabIndex","hasAttribute","flatMap","Array","destroy","_this7","removeAttribute","removeEventListener"],"mappings":"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"}