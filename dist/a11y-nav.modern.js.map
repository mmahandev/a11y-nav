{"version":3,"file":"a11y-nav.modern.js","sources":["../src/a11y-nav.ts"],"sourcesContent":["import './a11y-nav.css';\r\n\r\ninterface A11YNavOptions {\r\n  animate?: boolean;\r\n  duration?: number;\r\n  useArrowKeys?: boolean;\r\n  closeOnBlur?: boolean;\r\n  bodyClass?: string | boolean;\r\n}\r\n\r\ninterface Control {\r\n  el: HTMLButtonElement;\r\n  menu: Menu;\r\n}\r\n\r\ninterface Menu {\r\n  el: HTMLElement;\r\n  id: string;\r\n  control: Control;\r\n  hadTabIndex: boolean;\r\n}\r\n\r\nexport default class A11YNav {\r\n  nav: HTMLElement;\r\n  options: Required<A11YNavOptions>;\r\n  controls: Control[];\r\n  menus: Menu[];\r\n  focusables: HTMLElement[];\r\n\r\n  constructor(element: HTMLElement, options?: A11YNavOptions) {\r\n    this.nav = element;\r\n    this.options = {\r\n      // adds delay for toggling menu open/close animation classes\r\n      animate: true,\r\n      // amount of time in ms for menu open/close animation\r\n      duration: 300,\r\n      // Enables use of arrow keys to navigate menus\r\n      useArrowKeys: true,\r\n      // Enables closing of menus when focus leaves the nav\r\n      closeOnBlur: true,\r\n      // Class to add to body when a menu is open. If false, no class is added.\r\n      bodyClass: \"a11y-nav-menu-open\",\r\n    };\r\n    this.controls = this.getControls();\r\n    this.menus = this.controls.map((control) => control.menu);\r\n    this.focusables = this.getFocusables();\r\n\r\n    // Set user-inputted options if available\r\n    this.options = { ...this.options, ...options };\r\n\r\n    // Bind event handlers\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onButtonKeyDown = this.onButtonKeyDown.bind(this);\r\n    this.onFocusableKeyDown = this.onFocusableKeyDown.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controls.forEach((control) => {\r\n      // set initial properties\r\n      control.menu.el.classList.add(\"a11y-nav-menu\");\r\n      control.menu.el.setAttribute(\"tabindex\", \"-1\");\r\n\r\n      // Attach event listeners\r\n      control.el.addEventListener(\"click\", this.onButtonClick);\r\n      control.el.addEventListener(\"keydown\", this.onButtonKeyDown);\r\n\r\n      // Open menu if aria-expanded is true on page load\r\n      if (control.el.getAttribute(\"aria-expanded\") === \"true\") {\r\n        this.openMenu(control.menu);\r\n      }\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.addEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    if (this.options.closeOnBlur) {\r\n      this.nav.addEventListener(\"focusout\", this.onBlur);\r\n    }\r\n\r\n  }\r\n\r\n  private onButtonClick(event: MouseEvent): void {\r\n    const button = event.currentTarget as HTMLButtonElement;\r\n    const control = this.controls.find((control) => control.el === button);\r\n    const isOpen = control?.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (control?.menu) {\r\n      this.toggleMenu(control.menu, !isOpen);\r\n    }\r\n  }\r\n\r\n  private onButtonKeyDown(event: KeyboardEvent): void {\r\n    const control = this.getControlFromEl(event.target as HTMLButtonElement);\r\n\r\n    if (!control) return;\r\n\r\n    const hasMenuOpen = control.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (event.key === \"Escape\") {\r\n      if (hasMenuOpen) {\r\n        this.closeMenu(control.menu);\r\n      } else {\r\n        const closestMenuEl =\r\n          control.el.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n        if (closestMenuEl) {\r\n          const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n          if (menu) {\r\n            menu.control.el.focus();\r\n            this.closeMenu(menu);\r\n          } else {\r\n            this.focusables[0].focus();\r\n            this.closeAllMenus();\r\n          }\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      }\r\n    } else if (event.key === \"ArrowDown\" && hasMenuOpen) {\r\n      event.preventDefault();\r\n      control.menu.el.querySelector<HTMLElement>(\"a, button\")?.focus();\r\n    } else {\r\n      const sameLevelFocusables = this.focusables.filter(\r\n        (focusable) =>\r\n          this.getMenuDepthFromEl(focusable) ===\r\n          this.getMenuDepthFromEl(control.el)\r\n      );\r\n      const currentIndex = sameLevelFocusables.findIndex(\r\n        (focusable) => focusable === control.el\r\n      );\r\n\r\n      if (this.options.useArrowKeys) {\r\n        this.controlFocusByKey(\r\n          event,\r\n          sameLevelFocusables.map((focusable) => focusable),\r\n          currentIndex\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFocusableKeyDown(event: KeyboardEvent): void {\r\n    const el = event.target as HTMLButtonElement;\r\n    const focusable = this.getFocusableFromEl(el);\r\n\r\n    if (!focusable) {\r\n      return;\r\n    }\r\n    // Let onButtonKeyDown handle the rest\r\n    else if (this.controls.find((control) => control.el === focusable)) {\r\n      return;\r\n    } else if (event.key === \"Escape\") {\r\n      const closestMenuEl = focusable.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n      if (closestMenuEl) {\r\n        const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n        if (menu) {\r\n          menu.control.el.focus();\r\n          this.closeMenu(menu);\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      } else {\r\n        this.focusables[0].focus();\r\n        this.closeAllMenus();\r\n      }\r\n    }\r\n\r\n    const sameLevelFocusables = this.focusables.filter(\r\n      (f) => this.getMenuDepthFromEl(f) === this.getMenuDepthFromEl(focusable)\r\n    );\r\n    const currentIndex = sameLevelFocusables.findIndex((f) => f === focusable);\r\n\r\n    if (this.options.useArrowKeys) {\r\n      this.controlFocusByKey(\r\n        event,\r\n        sameLevelFocusables.map((f) => f),\r\n        currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private onBlur(event: FocusEvent): void {\r\n    const menuContainsFocus = this.nav.contains(\r\n      event.relatedTarget as HTMLElement\r\n    );\r\n\r\n    if (\r\n      !menuContainsFocus &&\r\n      !!this.nav.querySelector<HTMLElement>(\".a11y-nav-active\")\r\n    ) {\r\n      this.closeAllMenus();\r\n    }\r\n  }\r\n\r\n  private controlFocusByKey(\r\n    event: KeyboardEvent,\r\n    els: HTMLElement[],\r\n    currentIndex: number\r\n  ): void {\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const prevIndex = Math.max(0, currentIndex - 1);\r\n          els[prevIndex].focus();\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const nextIndex = Math.min(els.length - 1, currentIndex + 1);\r\n          els[nextIndex].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private toggleMenu(menu: Menu, show: boolean): void {\r\n    if (show) {\r\n      this.openMenu(menu);\r\n    } else {\r\n      this.closeMenu(menu);\r\n    }\r\n  }\r\n\r\n  private openMenu(menu: Menu): void {\r\n    // Close all other menus on the same level\r\n    this.menus.forEach((otherMenu) => {\r\n      if (\r\n        otherMenu !== menu &&\r\n        this.getMenuDepthFromEl(otherMenu.el) ===\r\n          this.getMenuDepthFromEl(menu.el)\r\n      ) {\r\n        this.closeMenu(otherMenu);\r\n      }\r\n    });\r\n\r\n    // Assign classes/properties\r\n    menu.el.classList.add(\"a11y-nav-active\");\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"true\");\r\n    menu.el.parentElement?.classList.add(\"a11y-nav-child-open\");\r\n    if (typeof this.options.bodyClass === 'string' && this.options.bodyClass.length > 0) {\r\n      document.body.classList.add(this.options.bodyClass);\r\n    }\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.add(\"a11y-nav-animate-in\");\r\n    }\r\n  }\r\n\r\n  private closeMenu(menu: Menu): void {\r\n    // Close all children menus currently open first\r\n    menu.el\r\n      .querySelectorAll<HTMLElement>(\".a11y-nav-menu\")\r\n      .forEach((childMenuEl) => {\r\n        const childMenu = this.getMenuFromEl(childMenuEl);\r\n\r\n        if (childMenu) this.closeMenu(childMenu);\r\n      });\r\n\r\n    // Set classes/properties\r\n    if (typeof this.options.bodyClass === 'string') {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.remove(\"a11y-nav-animate-in\");\r\n      menu.el.classList.add(\"a11y-nav-animate-out\");\r\n\r\n      setTimeout(() => {\r\n        menu.el.classList.remove(\"a11y-nav-active\");\r\n        menu.el.classList.remove(\"a11y-nav-animate-out\");\r\n        menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n      }, this.options.duration);\r\n    } else {\r\n      menu.el.classList.remove(\"a11y-nav-active\");\r\n      menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n    }\r\n  }\r\n\r\n  public closeAllMenus(): void {\r\n    this.menus.forEach((menu) => {\r\n      this.closeMenu(menu);\r\n    });\r\n  }\r\n\r\n  private getMenuDepthFromEl(element: HTMLElement): number {\r\n    let level = 0;\r\n    let parent = element.parentElement;\r\n\r\n    while (parent && parent !== this.nav) {\r\n      if (parent.classList.contains(\"a11y-nav-menu\") || parent === this.nav) {\r\n        level++;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private getMenuFromEl(element: HTMLElement): Menu | null {\r\n    return this.menus.find((menu) => menu.el === element) ?? null;\r\n  }\r\n\r\n  private getControlFromEl(element: HTMLElement): Control | null {\r\n    return this.controls.find((control) => control.el === element) ?? null;\r\n  }\r\n\r\n  private getFocusableFromEl(element: HTMLElement): HTMLElement | null {\r\n    return this.focusables.find((focusable) => focusable === element) ?? null;\r\n  }\r\n\r\n  private getControls(): Control[] {\r\n    return Array.from(\r\n      this.nav.querySelectorAll<HTMLButtonElement>(\r\n        \"button[aria-expanded][aria-controls]\"\r\n      )\r\n    )\r\n      .map((element) => {\r\n        const id = element.getAttribute(\"aria-controls\");\r\n        const menu = document.getElementById(id ?? \"\");\r\n\r\n        if (menu) {\r\n          const control: Control = {\r\n            el: element,\r\n            menu: {\r\n              el: menu,\r\n              id: menu.id,\r\n              hadTabIndex: menu.hasAttribute(\"tabindex\"),\r\n            }\r\n          } as Control;\r\n\r\n          control.menu.control = control;\r\n\r\n          return control;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .flatMap((control) => (control ? [control] : []));\r\n  }\r\n\r\n  private getFocusables(): HTMLElement[] {\r\n    return Array.from(this.nav.querySelectorAll<HTMLElement>(\"a, button\"));\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.closeAllMenus();\r\n\r\n    this.controls.forEach((control) => {\r\n      control.menu.el.classList.remove(\"a11y-nav-menu\");\r\n      if (!control.menu.hadTabIndex) {\r\n        control.menu.el.removeAttribute(\"tabindex\");\r\n      }\r\n\r\n      control.el.removeEventListener(\"click\", this.onButtonClick);\r\n      control.el.removeEventListener(\"keydown\", this.onButtonKeyDown);\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.removeEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    this.nav.removeEventListener(\"focusout\", this.onBlur);\r\n  }\r\n}\r\n"],"names":["constructor","element","options","this","nav","controls","menus","focusables","animate","duration","useArrowKeys","closeOnBlur","bodyClass","getControls","map","control","menu","getFocusables","_extends","onButtonClick","bind","onButtonKeyDown","onFocusableKeyDown","onBlur","init","forEach","el","classList","add","setAttribute","addEventListener","getAttribute","openMenu","focusable","event","button","currentTarget","find","isOpen","toggleMenu","getControlFromEl","target","key","hasMenuOpen","closeMenu","closestMenuEl","closest","getMenuFromEl","focus","closeAllMenus","preventDefault","querySelector","sameLevelFocusables","filter","getMenuDepthFromEl","currentIndex","findIndex","controlFocusByKey","getFocusableFromEl","f","contains","relatedTarget","els","Math","max","min","length","show","_menu$el$parentElemen","otherMenu","parentElement","document","body","querySelectorAll","childMenuEl","childMenu","remove","setTimeout","_menu$el$parentElemen3","level","parent","_this$menus$find","_this$controls$find","_this$focusables$find","Array","from","id","getElementById","hadTabIndex","hasAttribute","flatMap","destroy","removeAttribute","removeEventListener"],"mappings":"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"}