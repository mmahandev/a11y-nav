{"version":3,"file":"a11y-nav.modern.js","sources":["../src/a11y-nav.ts"],"sourcesContent":["import \"./a11y-nav.css\";\r\n\r\ninterface A11YNavOptions {\r\n  animate?: boolean;\r\n  duration?: number;\r\n  useArrowKeys?: boolean;\r\n  closeOnBlur?: boolean;\r\n  bodyClass?: string | boolean;\r\n  focusOnOpen?: boolean;\r\n}\r\n\r\ninterface Control {\r\n  el: HTMLButtonElement;\r\n  menu: Menu;\r\n}\r\n\r\ninterface Menu {\r\n  el: HTMLElement;\r\n  id: string;\r\n  control: Control;\r\n  hadTabIndex: boolean;\r\n}\r\n\r\nexport default class A11YNav {\r\n  nav: HTMLElement;\r\n  options: Required<A11YNavOptions>;\r\n  controls: Control[];\r\n  menus: Menu[];\r\n  focusables: HTMLElement[];\r\n\r\n  constructor(element: HTMLElement, options?: A11YNavOptions) {\r\n    this.nav = element;\r\n    this.options = {\r\n      // adds delay for toggling menu open/close animation classes\r\n      animate: true,\r\n      // amount of time in ms for menu open/close animation\r\n      duration: 300,\r\n      // Enables use of arrow keys to navigate menus\r\n      useArrowKeys: true,\r\n      // Enables closing of menus when focus leaves the nav\r\n      closeOnBlur: true,\r\n      // Class to add to body when a menu is open. If false, no class is added.\r\n      bodyClass: \"a11y-nav-menu-open\",\r\n      // Focus menu that just opened\r\n      focusOnOpen: true,\r\n    };\r\n    this.controls = this.getControls();\r\n    this.menus = this.controls.map((control) => control.menu);\r\n    this.focusables = this.getFocusables();\r\n\r\n    // Set user-inputted options if available\r\n    this.options = { ...this.options, ...options };\r\n\r\n    // Bind event handlers\r\n    this.onButtonClick = this.onButtonClick.bind(this);\r\n    this.onButtonKeyDown = this.onButtonKeyDown.bind(this);\r\n    this.onFocusableKeyDown = this.onFocusableKeyDown.bind(this);\r\n    this.onBlur = this.onBlur.bind(this);\r\n\r\n    this.init();\r\n  }\r\n\r\n  private init(): void {\r\n    this.controls.forEach((control) => {\r\n      // set initial properties\r\n      control.menu.el.classList.add(\"a11y-nav-menu\");\r\n      control.menu.el.setAttribute(\"tabindex\", \"-1\");\r\n\r\n      // Attach event listeners\r\n      control.el.addEventListener(\"click\", this.onButtonClick);\r\n      control.el.addEventListener(\"keydown\", this.onButtonKeyDown);\r\n\r\n      // Open menu if aria-expanded is true on page load\r\n      if (control.el.getAttribute(\"aria-expanded\") === \"true\") {\r\n        this.openMenu(control.menu, true);\r\n      }\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.addEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    if (this.options.closeOnBlur) {\r\n      this.nav.addEventListener(\"focusout\", this.onBlur);\r\n    }\r\n  }\r\n\r\n  private onButtonClick(event: MouseEvent): void {\r\n    const button = event.currentTarget as HTMLButtonElement;\r\n    const control = this.controls.find((control) => control.el === button);\r\n    const isOpen = control?.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (control?.menu) {\r\n      this.toggleMenu(control.menu, !isOpen);\r\n    }\r\n  }\r\n\r\n  private onButtonKeyDown(event: KeyboardEvent): void {\r\n    const control = this.getControlFromEl(event.target as HTMLButtonElement);\r\n\r\n    if (!control) return;\r\n\r\n    const hasMenuOpen = control.el.getAttribute(\"aria-expanded\") === \"true\";\r\n\r\n    if (event.key === \"Escape\") {\r\n      if (hasMenuOpen) {\r\n        this.closeMenu(control.menu);\r\n      } else {\r\n        const closestMenuEl =\r\n          control.el.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n        if (closestMenuEl) {\r\n          const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n          if (menu) {\r\n            menu.control.el.focus();\r\n            this.closeMenu(menu);\r\n          } else {\r\n            this.focusables[0].focus();\r\n            this.closeAllMenus();\r\n          }\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      }\r\n    } else if (event.key === \"ArrowDown\" && hasMenuOpen) {\r\n      event.preventDefault();\r\n      control.menu.el.querySelector<HTMLElement>(\"a, button\")?.focus();\r\n    } else {\r\n      const sameLevelFocusables = this.focusables.filter(\r\n        (focusable) =>\r\n          this.getMenuDepthFromEl(focusable) ===\r\n          this.getMenuDepthFromEl(control.el)\r\n      );\r\n      const currentIndex = sameLevelFocusables.findIndex(\r\n        (focusable) => focusable === control.el\r\n      );\r\n\r\n      if (this.options.useArrowKeys) {\r\n        this.controlFocusByKey(\r\n          event,\r\n          sameLevelFocusables.map((focusable) => focusable),\r\n          currentIndex\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private onFocusableKeyDown(event: KeyboardEvent): void {\r\n    const el = event.target as HTMLButtonElement;\r\n    const focusable = this.getFocusableFromEl(el);\r\n\r\n    if (!focusable) {\r\n      return;\r\n    }\r\n    // Let onButtonKeyDown handle the rest\r\n    else if (this.controls.find((control) => control.el === focusable)) {\r\n      return;\r\n    } else if (event.key === \"Escape\") {\r\n      const closestMenuEl = focusable.closest<HTMLElement>(\".a11y-nav-active\");\r\n\r\n      if (closestMenuEl) {\r\n        const menu = this.getMenuFromEl(closestMenuEl);\r\n\r\n        if (menu) {\r\n          menu.control.el.focus();\r\n          this.closeMenu(menu);\r\n        } else {\r\n          this.focusables[0].focus();\r\n          this.closeAllMenus();\r\n        }\r\n      } else {\r\n        this.focusables[0].focus();\r\n        this.closeAllMenus();\r\n      }\r\n    }\r\n\r\n    const sameLevelFocusables = this.focusables.filter(\r\n      (f) => this.getMenuDepthFromEl(f) === this.getMenuDepthFromEl(focusable)\r\n    );\r\n    const currentIndex = sameLevelFocusables.findIndex((f) => f === focusable);\r\n\r\n    if (this.options.useArrowKeys) {\r\n      this.controlFocusByKey(\r\n        event,\r\n        sameLevelFocusables.map((f) => f),\r\n        currentIndex\r\n      );\r\n    }\r\n  }\r\n\r\n  private onBlur(event: FocusEvent): void {\r\n    const menuContainsFocus = this.nav.contains(\r\n      event.relatedTarget as HTMLElement\r\n    );\r\n\r\n    if (\r\n      !menuContainsFocus &&\r\n      !!this.nav.querySelector<HTMLElement>(\".a11y-nav-active\")\r\n    ) {\r\n      this.closeAllMenus();\r\n    }\r\n  }\r\n\r\n  private controlFocusByKey(\r\n    event: KeyboardEvent,\r\n    els: HTMLElement[],\r\n    currentIndex: number\r\n  ): void {\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const prevIndex = Math.max(0, currentIndex - 1);\r\n          els[prevIndex].focus();\r\n        }\r\n        break;\r\n      case \"ArrowDown\":\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        if (currentIndex > -1) {\r\n          const nextIndex = Math.min(els.length - 1, currentIndex + 1);\r\n          els[nextIndex].focus();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private toggleMenu(menu: Menu, show: boolean): void {\r\n    if (show) {\r\n      this.openMenu(menu);\r\n    } else {\r\n      this.closeMenu(menu);\r\n    }\r\n  }\r\n\r\n  private openMenu(menu: Menu, forceNoFocus = false): void {\r\n    // Close all other menus on the same level\r\n    this.menus.forEach((otherMenu) => {\r\n      if (\r\n        otherMenu.el !== menu.el &&\r\n        otherMenu.el.classList.contains(\"a11y-nav-active\") &&\r\n        this.getMenuDepthFromEl(otherMenu.el) ===\r\n          this.getMenuDepthFromEl(menu.el)\r\n      ) {\r\n        this.closeMenu(otherMenu);\r\n      }\r\n    });\r\n\r\n    // Assign classes/properties\r\n    menu.el.classList.add(\"a11y-nav-active\");\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"true\");\r\n    menu.el.parentElement?.classList.add(\"a11y-nav-child-open\");\r\n    if (\r\n      typeof this.options.bodyClass === \"string\" &&\r\n      this.options.bodyClass.length > 0\r\n    ) {\r\n      document.body.classList.add(this.options.bodyClass);\r\n    }\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.add(\"a11y-nav-animate-in\");\r\n\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        setTimeout(() => {\r\n          menu.el.focus();\r\n        }, this.options.duration);\r\n      }\r\n    } else {\r\n      if (!forceNoFocus && this.options.focusOnOpen) {\r\n        menu.el.focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  private closeMenu(menu: Menu): void {\r\n    // Skip this if it's already closed\r\n    if (!menu.el.classList.contains(\"a11y-nav-active\")) return;\r\n    \r\n    // Close all children menus currently open first\r\n    menu.el\r\n      .querySelectorAll<HTMLElement>(\".a11y-nav-menu\")\r\n      .forEach((childMenuEl) => {\r\n        const childMenu = this.getMenuFromEl(childMenuEl);\r\n\r\n        if (childMenu) this.closeMenu(childMenu);\r\n      });\r\n\r\n    // Checks if any other menus are open on other levels\r\n    const hasOtherOpenMenus = this.menus.some(\r\n      (m) => m.el.classList.contains(\"a11y-nav-active\") && m.el !== menu.el\r\n    );\r\n\r\n    // Set classes/properties\r\n    if (typeof this.options.bodyClass === \"string\" && !hasOtherOpenMenus) {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n    menu.control.el.setAttribute(\"aria-expanded\", \"false\");\r\n\r\n    if (this.options.animate) {\r\n      menu.el.classList.remove(\"a11y-nav-animate-in\");\r\n      menu.el.classList.add(\"a11y-nav-animate-out\");\r\n\r\n      setTimeout(() => {\r\n        menu.el.classList.remove(\"a11y-nav-active\");\r\n        menu.el.classList.remove(\"a11y-nav-animate-out\");\r\n        menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n      }, this.options.duration);\r\n    } else {\r\n      menu.el.classList.remove(\"a11y-nav-active\");\r\n      menu.el.parentElement?.classList.remove(\"a11y-nav-child-open\");\r\n    }\r\n  }\r\n\r\n  public closeAllMenus(): void {\r\n    this.menus.forEach((menu) => {\r\n      this.closeMenu(menu);\r\n    });\r\n    \r\n    if (typeof this.options.bodyClass === \"string\") {\r\n      document.body.classList.remove(this.options.bodyClass);\r\n    }\r\n  }\r\n\r\n  /** Get the menu depth of an element */\r\n  private getMenuDepthFromEl(element: HTMLElement): number {\r\n    let level = 0;\r\n    let parent = element.parentElement;\r\n\r\n    while (parent && parent !== this.nav) {\r\n      if (parent.classList.contains(\"a11y-nav-menu\") || parent === this.nav) {\r\n        level++;\r\n      }\r\n      parent = parent.parentElement;\r\n    }\r\n\r\n    return level;\r\n  }\r\n\r\n  private getMenuFromEl(element: HTMLElement): Menu | null {\r\n    return this.menus.find((menu) => menu.el === element) ?? null;\r\n  }\r\n\r\n  private getControlFromEl(element: HTMLElement): Control | null {\r\n    return this.controls.find((control) => control.el === element) ?? null;\r\n  }\r\n\r\n  private getFocusableFromEl(element: HTMLElement): HTMLElement | null {\r\n    return this.focusables.find((focusable) => focusable === element) ?? null;\r\n  }\r\n\r\n  private getControls(): Control[] {\r\n    return Array.from(\r\n      this.nav.querySelectorAll<HTMLButtonElement>(\r\n        \"button[aria-expanded][aria-controls]\"\r\n      )\r\n    )\r\n      .map((element) => {\r\n        const id = element.getAttribute(\"aria-controls\");\r\n        const menu = document.getElementById(id ?? \"\");\r\n\r\n        if (menu) {\r\n          const control: Control = {\r\n            el: element,\r\n            menu: {\r\n              el: menu,\r\n              id: menu.id,\r\n              hadTabIndex: menu.hasAttribute(\"tabindex\"),\r\n            },\r\n          } as Control;\r\n\r\n          control.menu.control = control;\r\n\r\n          return control;\r\n        } else {\r\n          return null;\r\n        }\r\n      })\r\n      .flatMap((control) => (control ? [control] : []));\r\n  }\r\n\r\n  private getFocusables(): HTMLElement[] {\r\n    return Array.from(this.nav.querySelectorAll<HTMLElement>(\"a, button\"));\r\n  }\r\n\r\n  public destroy(): void {\r\n    this.closeAllMenus();\r\n\r\n    this.controls.forEach((control) => {\r\n      control.menu.el.classList.remove(\"a11y-nav-menu\");\r\n      if (!control.menu.hadTabIndex) {\r\n        control.menu.el.removeAttribute(\"tabindex\");\r\n      }\r\n\r\n      control.el.removeEventListener(\"click\", this.onButtonClick);\r\n      control.el.removeEventListener(\"keydown\", this.onButtonKeyDown);\r\n    });\r\n\r\n    this.focusables.forEach((focusable) => {\r\n      focusable.removeEventListener(\"keydown\", this.onFocusableKeyDown);\r\n    });\r\n\r\n    this.nav.removeEventListener(\"focusout\", this.onBlur);\r\n  }\r\n}\r\n"],"names":["constructor","element","options","nav","this","controls","menus","focusables","animate","duration","useArrowKeys","closeOnBlur","bodyClass","focusOnOpen","getControls","map","control","menu","getFocusables","_extends","onButtonClick","bind","onButtonKeyDown","onFocusableKeyDown","onBlur","init","forEach","el","classList","add","setAttribute","addEventListener","getAttribute","openMenu","focusable","event","currentTarget","find","button","toggleMenu","isOpen","getControlFromEl","target","hasMenuOpen","key","closeMenu","closest","closestMenuEl","getMenuFromEl","focus","closeAllMenus","preventDefault","_control$menu$el$quer","querySelector","sameLevelFocusables","filter","getMenuDepthFromEl","currentIndex","findIndex","controlFocusByKey","getFocusableFromEl","f","contains","relatedTarget","els","Math","max","min","length","show","forceNoFocus","_menu$el$parentElemen","otherMenu","parentElement","document","body","setTimeout","querySelectorAll","childMenuEl","childMenu","hasOtherOpenMenus","some","m","remove","_menu$el$parentElemen2","_menu$el$parentElemen3","level","parent","_this$menus$find","_this$controls$find","_this$focusables$find","Array","from","getElementById","id","hadTabIndex","hasAttribute","flatMap","destroy","removeAttribute","removeEventListener"],"mappings":"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"}